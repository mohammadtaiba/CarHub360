Index: src/test/java/de/fherfurt/core/MaintenanceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fherfurt.core;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\nimport de.fherfurt.model.Vehicle;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport java.util.Date;\r\n\r\npublic class MaintenanceTest {\r\n\r\n    private Maintenance maintenance;\r\n\r\n    @Before\r\n    public void setUp() {\r\n        // Initialize the maintenance object before each test\r\n        maintenance = new Maintenance();\r\n    }\r\n\r\n    @Test\r\n    public void testAddMaintenance() {\r\n        // Valid maintenance entry\r\n        Vehicle vehicle = new Vehicle(1, \"Astra K\", \"Opel\", 10000, 2020, \"Kombi\");\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        float cost = 100.0f;\r\n        String description = \"Routine maintenance\";\r\n\r\n        assertTrue(maintenance.addMaintenance(1, vehicle, startDate, endDate, cost, description));\r\n    }\r\n\r\n    @Test\r\n    public void testAddMaintenanceInvalidVehicle() {\r\n        // Invalid maintenance entry (null vehicle)\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        float cost = 100.0f;\r\n        String description = \"Routine maintenance\";\r\n\r\n        assertFalse(maintenance.addMaintenance(2, null, startDate, endDate, cost, description));\r\n    }\r\n\r\n    @Test\r\n    public void testGetMaintenanceDetails() {\r\n        // Valid maintenance details retrieval\r\n        Vehicle vehicle = new Vehicle(1, \"Astra K\", \"Opel\", 10000, 2020, \"Kombi\");\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        float cost = 100.0f;\r\n        String description = \"Routine maintenance\";\r\n\r\n        maintenance.addMaintenance(1, vehicle, startDate, endDate, cost, description);\r\n\r\n        String details = maintenance.getMaintenanceDetails(1);\r\n        assertNotNull(details);\r\n        assertTrue(details.contains(\"Maintenance ID: 1\"));\r\n        assertTrue(details.contains(\"Vehicle: \" + vehicle));\r\n        assertTrue(details.contains(\"Maintenance Start Date: \" + startDate));\r\n        assertTrue(details.contains(\"Maintenance End Date: \" + endDate));\r\n        assertTrue(details.contains(\"Maintenance Cost: \" + cost));\r\n        assertTrue(details.contains(\"Maintenance Description: \" + description));\r\n    }\r\n\r\n    @Test\r\n    public void testGetMaintenanceDetailsNotFound() {\r\n        // Maintenance details retrieval for non-existing maintenance\r\n        String details = maintenance.getMaintenanceDetails(999);\r\n        assertNotNull(details);\r\n        assertTrue(details.contains(\"Maintenance with ID 999 was not found.\"));\r\n    }\r\n\r\n    @Test\r\n    public void testDefaultConstructor() {\r\n        // Testing default constructor and getters/setters\r\n        Maintenance m = new Maintenance();\r\n        m.setMaintenanceId(1);\r\n        Vehicle vehicle = new Vehicle(2, \"Model S\", \"Tesla\", 50000, 2021, \"Sedan\");\r\n        m.setVehicle(vehicle);\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        m.setMaintenanceStartDate(startDate);\r\n        m.setMaintenanceEndDate(endDate);\r\n        m.setMaintenanceCost(200.0f);\r\n        m.setMaintenanceDescription(\"Battery replacement\");\r\n\r\n        assertEquals(1, m.getMaintenanceId());\r\n        assertEquals(vehicle, m.getVehicle());\r\n        assertEquals(startDate, m.getMaintenanceStartDate());\r\n        assertEquals(endDate, m.getMaintenanceEndDate());\r\n        assertEquals(200.0f, m.getMaintenanceCost(), 0);\r\n        assertEquals(\"Battery replacement\", m.getMaintenanceDescription());\r\n    }\r\n\r\n    @Test\r\n    public void testParameterizedConstructor() {\r\n        // Testing parameterized constructor\r\n        Vehicle vehicle = new Vehicle(3, \"Civic\", \"Honda\", 15000, 2018, \"Sedan\");\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        Maintenance m = new Maintenance(2, vehicle, startDate, endDate, 150.0f, \"Brake pad replacement\");\r\n\r\n        assertEquals(2, m.getMaintenanceId());\r\n        assertEquals(vehicle, m.getVehicle());\r\n        assertEquals(startDate, m.getMaintenanceStartDate());\r\n        assertEquals(endDate, m.getMaintenanceEndDate());\r\n        assertEquals(150.0f, m.getMaintenanceCost(), 0);\r\n        assertEquals(\"Brake pad replacement\", m.getMaintenanceDescription());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/de/fherfurt/core/MaintenanceTest.java b/src/test/java/de/fherfurt/core/MaintenanceTest.java
--- a/src/test/java/de/fherfurt/core/MaintenanceTest.java	(revision 2ebbce7665d1c1d37e4d7a8cba127599c7e15748)
+++ b/src/test/java/de/fherfurt/core/MaintenanceTest.java	(date 1716319681489)
@@ -55,7 +55,7 @@
         String details = maintenance.getMaintenanceDetails(1);
         assertNotNull(details);
         assertTrue(details.contains("Maintenance ID: 1"));
-        assertTrue(details.contains("Vehicle: " + vehicle));
+        assertTrue(details.contains("Vehicle: " + vehicle.toString())); // Changed to vehicle.toString()
         assertTrue(details.contains("Maintenance Start Date: " + startDate));
         assertTrue(details.contains("Maintenance End Date: " + endDate));
         assertTrue(details.contains("Maintenance Cost: " + cost));
Index: src/test/java/de/fherfurt/core/PaymentTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fherfurt.core;\r\n\r\nimport de.fherfurt.core.Customer;\r\nimport de.fherfurt.core.payment.Payment;\r\nimport de.fherfurt.core.payment.PaymentMethod;\r\nimport de.fherfurt.core.payment.PaymentStatus;\r\nimport de.fherfurt.logic.CustomerAddress;\r\nimport org.junit.After;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.text.SimpleDateFormat;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\npublic class PaymentTest {\r\n\r\n    private Payment payment_1, payment_2, payment_3;\r\n    private Customer customer;\r\n    private PaymentMethod paymentMethod_1, paymentMethod_2, paymentMethod_3;\r\n    private PaymentStatus paymentStatus_1, paymentStatus_2, paymentStatus_3;\r\n    private SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        payment_1 = new Payment();\r\n        payment_2 = new Payment();\r\n        payment_3 = new Payment();\r\n\r\n        CustomerAddress address1 = new CustomerAddress(1, \"Anytown\", \"123\", \"Main Street1\", \"12345\");\r\n        Customer.createCustomer(1, \"Mohammad\", \"Taiba\", \"mohammadtaiba55@gmail.com\", sdf.parse(\"01/01/1999\"), false, address1);\r\n        customer = Customer.getCustomerList().stream().filter(c -> c.getCustomerId() == 1).findFirst().orElse(null);\r\n\r\n        CustomerAddress address2 = new CustomerAddress(2, \"Anytown\", \"1234\", \"Main Street2\", \"12345\");\r\n        Customer.createCustomer(2, \"Ahmad\", \"Sami\", \"ahmadsami55@gmail.com\", sdf.parse(\"01/01/1992\"), false, address2);\r\n\r\n        CustomerAddress address3 = new CustomerAddress(3, \"Anytown\", \"12345\", \"Main Street3\", \"12345\");\r\n        Customer.createCustomer(3, \"Julia\", \"MÃ¼ller\", \"juliamueller@gmail.com\", sdf.parse(\"01/01/1995\"), true, address3);\r\n\r\n        paymentMethod_1 = PaymentMethod.CREDIT_CARD;\r\n        paymentMethod_2 = PaymentMethod.CASH;\r\n        paymentMethod_3 = PaymentMethod.BANK_TRANSFER;\r\n        paymentStatus_1 = PaymentStatus.PENDING;\r\n        paymentStatus_2 = PaymentStatus.COMPLETED;\r\n        paymentStatus_3 = PaymentStatus.COMPLETED;\r\n    }\r\n\r\n    @After\r\n    public void tearDown() throws Exception {\r\n    }\r\n\r\n    @Test\r\n    public void testProcessPaymentSuccess() {\r\n        assertTrue(payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\")));\r\n        assertTrue(payment_2.processPayment(2, customer, 2, paymentMethod_2, paymentStatus_2, new BigDecimal(\"1000.00\")));\r\n        assertTrue(payment_3.processPayment(3, customer, 3, paymentMethod_3, paymentStatus_3, new BigDecimal(\"500.00\")));\r\n    }\r\n\r\n    @Test\r\n    public void testProcessPaymentFailure() {\r\n        assertFalse(payment_1.processPayment(0, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\")));\r\n        assertFalse(payment_1.processPayment(-1, customer, 2, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\")));\r\n        assertFalse(payment_1.processPayment(1, null, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\")));\r\n        assertFalse(payment_1.processPayment(1, customer, 1, null, paymentStatus_1, new BigDecimal(\"100.00\")));\r\n        assertFalse(payment_1.processPayment(1, customer, 1, paymentMethod_1, null, new BigDecimal(\"100.00\")));\r\n        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, null));\r\n        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(0)));\r\n        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(-1)));\r\n    }\r\n\r\n    @Test\r\n    public void testGetPaymentDetailsValid() {\r\n        payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\"));\r\n        String details_1 = payment_1.getPaymentDetails(1);\r\n        assertNotNull(details_1);\r\n        assertTrue(details_1.contains(\"Payment ID: 1\"));\r\n\r\n        payment_2.processPayment(2, customer, 2, paymentMethod_2, paymentStatus_2, new BigDecimal(\"1000.00\"));\r\n        String details_2 = payment_2.getPaymentDetails(2);\r\n        assertNotNull(details_2);\r\n        assertTrue(details_2.contains(\"Payment ID: 2\"));\r\n\r\n        payment_3.processPayment(3, customer, 3, paymentMethod_3, paymentStatus_3, new BigDecimal(\"500.00\"));\r\n        String details_3 = payment_3.getPaymentDetails(3);\r\n        assertNotNull(details_3);\r\n        assertTrue(details_3.contains(\"Payment ID: 3\"));\r\n    }\r\n\r\n    @Test\r\n    public void testGetPaymentDetailsInvalid() {\r\n        payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(\"100.00\"));\r\n        String details = payment_1.getPaymentDetails(999);\r\n        assertTrue(details.contains(\"Payment ID not found.\"));\r\n    }\r\n\r\n    @Test\r\n    public void testDefaultConstructor() {\r\n        Payment payment = new Payment();\r\n        assertNotNull(payment);\r\n    }\r\n\r\n    @Test\r\n    public void testSettersAndGetters() {\r\n        Payment payment = new Payment();\r\n        payment.setPaymentId(1);\r\n        payment.setCustomer(customer);\r\n        payment.setCustomerId(1);\r\n        payment.setPaymentMethod(paymentMethod_1);\r\n        payment.setPaymentStatus(paymentStatus_1);\r\n        payment.setPaymentAmount(new BigDecimal(\"100.00\"));\r\n\r\n        assertEquals(1, payment.getPaymentId());\r\n        assertEquals(customer, payment.getCustomer());\r\n        assertEquals(1, payment.getCustomerId());\r\n        assertEquals(paymentMethod_1, payment.getPaymentMethod());\r\n        assertEquals(paymentStatus_1, payment.getPaymentStatus());\r\n        assertEquals(new BigDecimal(\"100.00\"), payment.getPaymentAmount());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/de/fherfurt/core/PaymentTest.java b/src/test/java/de/fherfurt/core/PaymentTest.java
--- a/src/test/java/de/fherfurt/core/PaymentTest.java	(revision 2ebbce7665d1c1d37e4d7a8cba127599c7e15748)
+++ b/src/test/java/de/fherfurt/core/PaymentTest.java	(date 1716319558119)
@@ -1,6 +1,5 @@
 package de.fherfurt.core;
 
-import de.fherfurt.core.Customer;
 import de.fherfurt.core.payment.Payment;
 import de.fherfurt.core.payment.PaymentMethod;
 import de.fherfurt.core.payment.PaymentStatus;
@@ -17,7 +16,7 @@
 public class PaymentTest {
 
     private Payment payment_1, payment_2, payment_3;
-    private Customer customer;
+    private Customer customer_1, customer_2, customer_3;
     private PaymentMethod paymentMethod_1, paymentMethod_2, paymentMethod_3;
     private PaymentStatus paymentStatus_1, paymentStatus_2, paymentStatus_3;
     private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
@@ -30,13 +29,15 @@
 
         CustomerAddress address1 = new CustomerAddress(1, "Anytown", "123", "Main Street1", "12345");
         Customer.createCustomer(1, "Mohammad", "Taiba", "mohammadtaiba55@gmail.com", sdf.parse("01/01/1999"), false, address1);
-        customer = Customer.getCustomerList().stream().filter(c -> c.getCustomerId() == 1).findFirst().orElse(null);
+        customer_1 = Customer.getCustomerList().stream().filter(c -> c.getCustomerId() == 1).findFirst().orElse(null);
 
         CustomerAddress address2 = new CustomerAddress(2, "Anytown", "1234", "Main Street2", "12345");
         Customer.createCustomer(2, "Ahmad", "Sami", "ahmadsami55@gmail.com", sdf.parse("01/01/1992"), false, address2);
+        customer_2 = Customer.getCustomerList().stream().filter(c -> c.getCustomerId() == 2).findFirst().orElse(null);
 
         CustomerAddress address3 = new CustomerAddress(3, "Anytown", "12345", "Main Street3", "12345");
         Customer.createCustomer(3, "Julia", "MÃ¼ller", "juliamueller@gmail.com", sdf.parse("01/01/1995"), true, address3);
+        customer_3 = Customer.getCustomerList().stream().filter(c -> c.getCustomerId() == 3).findFirst().orElse(null);
 
         paymentMethod_1 = PaymentMethod.CREDIT_CARD;
         paymentMethod_2 = PaymentMethod.CASH;
@@ -48,40 +49,61 @@
 
     @After
     public void tearDown() throws Exception {
+        payment_1 = null;
+        payment_2 = null;
+        payment_3 = null;
+        customer_1 = null;
+        customer_2 = null;
+        customer_3 = null;
     }
 
     @Test
     public void testProcessPaymentSuccess() {
-        assertTrue(payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
-        assertTrue(payment_2.processPayment(2, customer, 2, paymentMethod_2, paymentStatus_2, new BigDecimal("1000.00")));
-        assertTrue(payment_3.processPayment(3, customer, 3, paymentMethod_3, paymentStatus_3, new BigDecimal("500.00")));
+        assertTrue(payment_1.processPayment(1, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
+        assertTrue(payment_2.processPayment(2, customer_2, 2, paymentMethod_2, paymentStatus_2, new BigDecimal("1000.00")));
+        assertTrue(payment_3.processPayment(3, customer_3, 3, paymentMethod_3, paymentStatus_3, new BigDecimal("500.00")));
     }
 
     @Test
     public void testProcessPaymentFailure() {
-        assertFalse(payment_1.processPayment(0, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
-        assertFalse(payment_1.processPayment(-1, customer, 2, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
+        // Testing invalid paymentId
+        assertFalse(payment_1.processPayment(0, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
+        assertFalse(payment_1.processPayment(-1, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
+
+        // Testing null customer
         assertFalse(payment_1.processPayment(1, null, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00")));
-        assertFalse(payment_1.processPayment(1, customer, 1, null, paymentStatus_1, new BigDecimal("100.00")));
-        assertFalse(payment_1.processPayment(1, customer, 1, paymentMethod_1, null, new BigDecimal("100.00")));
-        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, null));
-        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(0)));
-        assertFalse(payment_1.processPayment(5, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(-1)));
+
+        // Testing null paymentMethod
+        assertFalse(payment_1.processPayment(1, customer_1, 1, null, paymentStatus_1, new BigDecimal("100.00")));
+
+        // Testing null paymentStatus
+        assertFalse(payment_1.processPayment(1, customer_1, 1, paymentMethod_1, null, new BigDecimal("100.00")));
+
+        // Testing null paymentAmount
+        assertFalse(payment_1.processPayment(5, customer_1, 1, paymentMethod_1, paymentStatus_1, null));
+
+        // Testing non-positive paymentAmount
+        assertFalse(payment_1.processPayment(5, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(0)));
+        assertFalse(payment_1.processPayment(5, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal(-1)));
+
+        // Testing duplicate paymentId
+        payment_1.processPayment(1, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00"));
+        assertFalse(payment_1.processPayment(1, customer_2, 2, paymentMethod_2, paymentStatus_2, new BigDecimal("200.00")));
     }
 
     @Test
     public void testGetPaymentDetailsValid() {
-        payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00"));
+        payment_1.processPayment(1, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00"));
         String details_1 = payment_1.getPaymentDetails(1);
         assertNotNull(details_1);
         assertTrue(details_1.contains("Payment ID: 1"));
 
-        payment_2.processPayment(2, customer, 2, paymentMethod_2, paymentStatus_2, new BigDecimal("1000.00"));
+        payment_2.processPayment(2, customer_2, 2, paymentMethod_2, paymentStatus_2, new BigDecimal("1000.00"));
         String details_2 = payment_2.getPaymentDetails(2);
         assertNotNull(details_2);
         assertTrue(details_2.contains("Payment ID: 2"));
 
-        payment_3.processPayment(3, customer, 3, paymentMethod_3, paymentStatus_3, new BigDecimal("500.00"));
+        payment_3.processPayment(3, customer_3, 3, paymentMethod_3, paymentStatus_3, new BigDecimal("500.00"));
         String details_3 = payment_3.getPaymentDetails(3);
         assertNotNull(details_3);
         assertTrue(details_3.contains("Payment ID: 3"));
@@ -89,7 +111,7 @@
 
     @Test
     public void testGetPaymentDetailsInvalid() {
-        payment_1.processPayment(1, customer, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00"));
+        payment_1.processPayment(1, customer_1, 1, paymentMethod_1, paymentStatus_1, new BigDecimal("100.00"));
         String details = payment_1.getPaymentDetails(999);
         assertTrue(details.contains("Payment ID not found."));
     }
@@ -104,14 +126,14 @@
     public void testSettersAndGetters() {
         Payment payment = new Payment();
         payment.setPaymentId(1);
-        payment.setCustomer(customer);
+        payment.setCustomer(customer_1);
         payment.setCustomerId(1);
         payment.setPaymentMethod(paymentMethod_1);
         payment.setPaymentStatus(paymentStatus_1);
         payment.setPaymentAmount(new BigDecimal("100.00"));
 
         assertEquals(1, payment.getPaymentId());
-        assertEquals(customer, payment.getCustomer());
+        assertEquals(customer_1, payment.getCustomer());
         assertEquals(1, payment.getCustomerId());
         assertEquals(paymentMethod_1, payment.getPaymentMethod());
         assertEquals(paymentStatus_1, payment.getPaymentStatus());
Index: src/main/java/de/fherfurt/core/Maintenance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fherfurt.core;\r\n\r\nimport de.fherfurt.model.Vehicle;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents maintenance information for vehicles.\r\n * It includes attributes such as maintenance ID, vehicle, maintenance start date, maintenance end date, maintenance cost, and maintenance description.\r\n */\r\npublic class Maintenance {\r\n\r\n    private int maintenanceId;\r\n    private Vehicle vehicle;\r\n    private Date maintenanceStartDate;\r\n    private Date maintenanceEndDate;\r\n    private float maintenanceCost;\r\n    private String maintenanceDescription;\r\n    private List<Maintenance> maintenances;\r\n\r\n    // Default constructor to initialize the maintenances list\r\n    public Maintenance() {\r\n        this.maintenances = new ArrayList<>();\r\n    }\r\n\r\n    // Parameterized constructor to initialize the maintenance attributes\r\n    public Maintenance(int maintenanceId, Vehicle vehicle, Date maintenanceStartDate, Date maintenanceEndDate,\r\n                       float maintenanceCost, String maintenanceDescription) {\r\n        this.maintenanceId = maintenanceId;\r\n        this.vehicle = vehicle;\r\n        this.maintenanceStartDate = maintenanceStartDate;\r\n        this.maintenanceEndDate = maintenanceEndDate;\r\n        this.maintenanceCost = maintenanceCost;\r\n        this.maintenanceDescription = maintenanceDescription;\r\n    }\r\n\r\n    // Getter and setter methods\r\n    public int getMaintenanceId() {\r\n        return maintenanceId;\r\n    }\r\n\r\n    public void setMaintenanceId(int maintenanceId) {\r\n        this.maintenanceId = maintenanceId;\r\n    }\r\n\r\n    public Vehicle getVehicle() {\r\n        return vehicle;\r\n    }\r\n\r\n    public void setVehicle(Vehicle vehicle) {\r\n        this.vehicle = vehicle;\r\n    }\r\n\r\n    public Date getMaintenanceStartDate() {\r\n        return maintenanceStartDate;\r\n    }\r\n\r\n    public void setMaintenanceStartDate(Date maintenanceStartDate) {\r\n        this.maintenanceStartDate = maintenanceStartDate;\r\n    }\r\n\r\n    public Date getMaintenanceEndDate() {\r\n        return maintenanceEndDate;\r\n    }\r\n\r\n    public void setMaintenanceEndDate(Date maintenanceEndDate) {\r\n        this.maintenanceEndDate = maintenanceEndDate;\r\n    }\r\n\r\n    public float getMaintenanceCost() {\r\n        return maintenanceCost;\r\n    }\r\n\r\n    public void setMaintenanceCost(float maintenanceCost) {\r\n        this.maintenanceCost = maintenanceCost;\r\n    }\r\n\r\n    public String getMaintenanceDescription() {\r\n        return maintenanceDescription;\r\n    }\r\n\r\n    public void setMaintenanceDescription(String maintenanceDescription) {\r\n        this.maintenanceDescription = maintenanceDescription;\r\n    }\r\n\r\n    // Method to add maintenance information for a vehicle\r\n    public boolean addMaintenance(int maintenanceId, Vehicle vehicle, Date maintenanceStartDate, Date maintenanceEndDate,\r\n                                  float maintenanceCost, String maintenanceDescription) {\r\n        if (vehicle != null) {\r\n            Maintenance maintenance = new Maintenance(maintenanceId, vehicle, maintenanceStartDate, maintenanceEndDate,\r\n                    maintenanceCost, maintenanceDescription);\r\n            maintenances.add(maintenance);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Method to retrieve details of a maintenance identified by the maintenanceId\r\n    public String getMaintenanceDetails(int maintenanceId) {\r\n        for (Maintenance maintenance : maintenances) {\r\n            if (maintenance.getMaintenanceId() == maintenanceId) {\r\n                return \"Maintenance Details: \\n\" +\r\n                        \"Maintenance ID: \" + maintenance.getMaintenanceId() + \" \\n\" +\r\n                        \"Vehicle: \" + maintenance.getVehicle().toString() + \" \\n\" +\r\n                        \"Maintenance Start Date: \" + maintenance.getMaintenanceStartDate() + \" \\n\" +\r\n                        \"Maintenance End Date: \" + maintenance.getMaintenanceEndDate() + \" \\n\" +\r\n                        \"Maintenance Cost: \" + maintenance.getMaintenanceCost() + \" \\n\" +\r\n                        \"Maintenance Description: \" + maintenance.getMaintenanceDescription();\r\n            }\r\n        }\r\n        return \"Maintenance with ID \" + maintenanceId + \" was not found.\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/fherfurt/core/Maintenance.java b/src/main/java/de/fherfurt/core/Maintenance.java
--- a/src/main/java/de/fherfurt/core/Maintenance.java	(revision 2ebbce7665d1c1d37e4d7a8cba127599c7e15748)
+++ b/src/main/java/de/fherfurt/core/Maintenance.java	(date 1716318244927)
@@ -108,6 +108,9 @@
                         "Maintenance End Date: " + maintenance.getMaintenanceEndDate() + " \n" +
                         "Maintenance Cost: " + maintenance.getMaintenanceCost() + " \n" +
                         "Maintenance Description: " + maintenance.getMaintenanceDescription();
+            } else {
+                return "false";
+
             }
         }
         return "Maintenance with ID " + maintenanceId + " was not found.";
Index: src/main/java/de/fherfurt/core/payment/Payment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fherfurt.core.payment;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport de.fherfurt.core.Customer;\r\n\r\n/**\r\n * This class represents a payment made by a customer.\r\n * It includes attributes such as payment ID, customer details, payment method, payment status, and payment amount.\r\n */\r\npublic class Payment {\r\n    private int paymentId;\r\n    private Customer customer;\r\n    private int customerId;\r\n    private PaymentMethod paymentMethod;\r\n    private PaymentStatus paymentStatus;\r\n    private BigDecimal paymentAmount;\r\n    private List<Payment> payments = new ArrayList<>();\r\n\r\n    /**\r\n     * Parameterized constructor to initialize the payment attributes.\r\n     *\r\n     * @param paymentId Unique identifier for the payment\r\n     * @param customer The customer making the payment\r\n     * @param customerId The ID of the customer making the payment\r\n     * @param paymentMethod The method used for payment\r\n     * @param paymentStatus The current status of the payment (e.g., processed, pending)\r\n     * @param paymentAmount The amount of the payment\r\n     */\r\n    public Payment(int paymentId, Customer customer, int customerId, PaymentMethod paymentMethod,\r\n                   PaymentStatus paymentStatus, BigDecimal paymentAmount) {\r\n        this.paymentId = paymentId;\r\n        this.customer = customer;\r\n        this.customerId = customerId;\r\n        this.paymentMethod = paymentMethod;\r\n        this.paymentStatus = paymentStatus;\r\n        this.paymentAmount = paymentAmount;\r\n    }\r\n\r\n    // Default constructor for initializing payments list\r\n    public Payment() {\r\n    }\r\n\r\n    // Getter and setter methods\r\n    public int getPaymentId() {\r\n        return paymentId;\r\n    }\r\n\r\n    public void setPaymentId(int paymentId) {\r\n        this.paymentId = paymentId;\r\n    }\r\n\r\n    public Customer getCustomer() {\r\n        return customer;\r\n    }\r\n\r\n    public void setCustomer(Customer customer) {\r\n        this.customer = customer;\r\n    }\r\n\r\n    public int getCustomerId() {\r\n        return customerId;\r\n    }\r\n\r\n    public void setCustomerId(int customerId) {\r\n        this.customerId = customerId;\r\n    }\r\n\r\n    public PaymentMethod getPaymentMethod() {\r\n        return paymentMethod;\r\n    }\r\n\r\n    public void setPaymentMethod(PaymentMethod paymentMethod) {\r\n        this.paymentMethod = paymentMethod;\r\n    }\r\n\r\n    public PaymentStatus getPaymentStatus() {\r\n        return paymentStatus;\r\n    }\r\n\r\n    public void setPaymentStatus(PaymentStatus paymentStatus) {\r\n        this.paymentStatus = paymentStatus;\r\n    }\r\n\r\n    public BigDecimal getPaymentAmount() {\r\n        return paymentAmount;\r\n    }\r\n\r\n    public void setPaymentAmount(BigDecimal paymentAmount) {\r\n        this.paymentAmount = paymentAmount;\r\n    }\r\n\r\n    /**\r\n     * Processes a payment and adds it to the payment collection if it does not already exist and the parameters are valid.\r\n     *\r\n     * @param paymentId Unique identifier for the payment\r\n     * @param customer The customer making the payment\r\n     * @param customerId The ID of the customer making the payment\r\n     * @param paymentMethod The method used for payment\r\n     * @param paymentStatus The current status of the payment (e.g., processed, pending)\r\n     * @param paymentAmount The amount of the payment\r\n     * @return true if the payment is successfully processed, false if the paymentId already exists, is less than or equal to 0, or any parameters are invalid\r\n     */\r\n    public boolean processPayment(int paymentId, Customer customer, int customerId, PaymentMethod paymentMethod,\r\n                                  PaymentStatus paymentStatus, BigDecimal paymentAmount) {\r\n        if (paymentId <= 0 || customer == null || paymentMethod == null || paymentStatus == null\r\n                || paymentAmount == null || paymentAmount.compareTo(BigDecimal.ZERO) <= 0) {\r\n            return false;\r\n        }\r\n\r\n        for (Payment payment : payments) {\r\n            if (payment.getPaymentId() == paymentId) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        Payment payment = new Payment(paymentId, customer, customerId, paymentMethod, paymentStatus, paymentAmount);\r\n        payments.add(payment);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the details of a payment in a formatted string.\r\n     *\r\n     * @param paymentId The unique identifier of the payment\r\n     * @return A string containing the payment details, or a message indicating the payment ID was not found\r\n     */\r\n    public String getPaymentDetails(int paymentId) {\r\n        for (Payment payment : payments) {\r\n            if (payment.getPaymentId() == paymentId) {\r\n                return \"Payment ID: \" + payment.getPaymentId() + \"\\n\" +\r\n                        \"Customer: \" + payment.getCustomer().getFullName() + \"\\n\" + // Assuming getFullName() returns a string with customer details\r\n                        \"Payment Method: \" + payment.getPaymentMethod() + \"\\n\" +\r\n                        \"Payment Status: \" + payment.getPaymentStatus() + \"\\n\" +\r\n                        \"Payment Amount: \" + payment.getPaymentAmount();\r\n            }\r\n        }\r\n        return \"Payment ID not found.\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/fherfurt/core/payment/Payment.java b/src/main/java/de/fherfurt/core/payment/Payment.java
--- a/src/main/java/de/fherfurt/core/payment/Payment.java	(revision 2ebbce7665d1c1d37e4d7a8cba127599c7e15748)
+++ b/src/main/java/de/fherfurt/core/payment/Payment.java	(date 1716319445858)
@@ -110,9 +110,7 @@
         }
 
         for (Payment payment : payments) {
-            if (payment.getPaymentId() == paymentId) {
-                return false;
-            }
+            return payment.getPaymentId() != paymentId;
         }
 
         Payment payment = new Payment(paymentId, customer, customerId, paymentMethod, paymentStatus, paymentAmount);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1ae668b4-5b17-4607-9e5f-430942c42cbc\" name=\"Changes\" comment=\"Verbesserung\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/Contract.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/Customer.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/Maintenance.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/Payment.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/PaymentMethod.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/PaymentStatus.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/logic/CustomerAddress.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/logic/RentVehicle.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/logic/SaleVehicle.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/logic/customerHistory/CustomerHistory.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/logic/customerHistory/CustomerHistoryReview.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/main/de/fherfurt/model/Vehicle.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/core/ContractTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/core/CustomerTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/core/MaintenanceTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/core/PaymentTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/logic/CustomerAddressTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/logic/CustomerHistoryTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/logic/RentVehicleTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/logic/SaleVehicleTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/test/de/fherfurt/model/VehicleTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/de/fherfurt/logic/CustomerAddress.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/de/fherfurt/logic/CustomerAddress.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerAddressTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerAddressTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerHistoryTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerHistoryTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/de/fherfurt/logic/CustomerAddress.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/de/fherfurt/logic/CustomerAddress.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerAddressTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerAddressTest.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerHistoryTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerHistoryTest.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2gk85lCFIwgL2bjQ4JDSoSwBCz4\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"Downloaded.Files.Path.Enabled\": \"false\",\n    \"JUnit.All in CarHub360 (1).executor\": \"Coverage\",\n    \"JUnit.All in CarHub360 (2).executor\": \"Coverage\",\n    \"JUnit.All in CarHub360.executor\": \"Profiler#1\",\n    \"JUnit.All in mmra (1).executor\": \"Coverage\",\n    \"JUnit.All in mmra (2).executor\": \"Coverage\",\n    \"JUnit.All in mmra (3).executor\": \"Coverage\",\n    \"JUnit.All in mmra (4).executor\": \"Coverage\",\n    \"JUnit.All in mmra (5).executor\": \"Coverage\",\n    \"JUnit.All in mmra 3.executor\": \"Coverage\",\n    \"JUnit.All in mmra.executor\": \"Coverage\",\n    \"JUnit.All in test (1).executor\": \"Coverage\",\n    \"JUnit.All in test.executor\": \"Coverage\",\n    \"JUnit.CustomerAddressTest.executor\": \"Run\",\n    \"JUnit.de.fherfurt in test.executor\": \"Coverage\",\n    \"JUnit.de.fherfurt.core in test.executor\": \"Coverage\",\n    \"Repository.Attach.Annotations\": \"false\",\n    \"Repository.Attach.JavaDocs\": \"false\",\n    \"Repository.Attach.Sources\": \"false\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"main\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/rudolfminz/Downloads/mmra 3\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"JUnit.All in mmra (4)\">\n    <configuration name=\"All in mmra (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmra\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"package\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"All in mmra (2)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmra\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"package\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"All in mmra (3)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmra\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"package\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"All in mmra (4)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmra\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"package\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"All in mmra (5)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmra\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"package\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.All in mmra (4)\" />\n        <item itemvalue=\"JUnit.All in mmra (3)\" />\n        <item itemvalue=\"JUnit.All in mmra (2)\" />\n        <item itemvalue=\"JUnit.All in mmra (1)\" />\n        <item itemvalue=\"JUnit.All in mmra (5)\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-f644763e9732-f98dd351\" />\n        <option value=\"jdk-22-openjdk-22-f644763e9732-8c5c9ae5\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1ae668b4-5b17-4607-9e5f-430942c42cbc\" name=\"Changes\" comment=\"\" />\n      <created>1716230033268</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1716230033268</updated>\n      <workItem from=\"1716230034316\" duration=\"1944000\" />\n      <workItem from=\"1716232019162\" duration=\"1401000\" />\n      <workItem from=\"1716314648575\" duration=\"1210000\" />\n      <workItem from=\"1716316211172\" duration=\"1629000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"korrekt\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716231937685</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716231937685</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"korrekt\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716232634692</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716232634692</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Verbesserung\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1716316348100</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1716316348100</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"korrekt\" />\n    <MESSAGE value=\"Verbesserung\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Verbesserung\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra__4_.ic\" NAME=\"All in mmra (4) Coverage Results\" MODIFIED=\"1716317299558\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$VehicleTest.ic\" NAME=\"VehicleTest Coverage Results\" MODIFIED=\"1716315505760\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.model.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_CarHub360__2_.ic\" NAME=\"All in CarHub360 (2) Coverage Results\" MODIFIED=\"1716316128861\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$SaleVehicleTest.ic\" NAME=\"SaleVehicleTest Coverage Results\" MODIFIED=\"1716315538046\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.logic.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra.ic\" NAME=\"All in mmra Coverage Results\" MODIFIED=\"1716231945915\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$de_fherfurt_in_test.ic\" NAME=\"de.fherfurt in test Coverage Results\" MODIFIED=\"1716315079481\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra__4_.ic\" NAME=\"All in mmra (4) Coverage Results\" MODIFIED=\"1716231229980\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_CarHub360__1_.ic\" NAME=\"All in CarHub360 (1) Coverage Results\" MODIFIED=\"1716316114782\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra__3_.ic\" NAME=\"All in mmra (3) Coverage Results\" MODIFIED=\"1716316710470\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra__5_.ic\" NAME=\"All in mmra (5) Coverage Results\" MODIFIED=\"1716317539274\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra__3_.ic\" NAME=\"All in mmra (3) Coverage Results\" MODIFIED=\"1716231195461\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_test.ic\" NAME=\"All in test Coverage Results\" MODIFIED=\"1716230137118\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$CustomerAddressTest.ic\" NAME=\"CustomerAddressTest Coverage Results\" MODIFIED=\"1716315816812\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.logic.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra$RentVehicleTest.ic\" NAME=\"RentVehicleTest Coverage Results\" MODIFIED=\"1716315521461\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.logic.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_test.ic\" NAME=\"All in test Coverage Results\" MODIFIED=\"1716316141114\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra__2_.ic\" NAME=\"All in mmra (2) Coverage Results\" MODIFIED=\"1716315088200\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra_3.ic\" NAME=\"All in mmra 3 Coverage Results\" MODIFIED=\"1716230270540\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra__1_.ic\" NAME=\"All in mmra (1) Coverage Results\" MODIFIED=\"1716317717046\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra.ic\" NAME=\"All in mmra Coverage Results\" MODIFIED=\"1716317352450\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$de_fherfurt_core_in_test.ic\" NAME=\"de.fherfurt.core in test Coverage Results\" MODIFIED=\"1716314974126\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.core.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra__1_.ic\" NAME=\"All in mmra (1) Coverage Results\" MODIFIED=\"1716230843918\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra_3$All_in_mmra__5_.ic\" NAME=\"All in mmra (5) Coverage Results\" MODIFIED=\"1716231814443\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_mmra__2_.ic\" NAME=\"All in mmra (2) Coverage Results\" MODIFIED=\"1716316625127\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$All_in_test__1_.ic\" NAME=\"All in test (1) Coverage Results\" MODIFIED=\"1716316416319\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\n    <SUITE FILE_PATH=\"coverage/mmra$de_fherfurt_in_test.ic\" NAME=\"de.fherfurt in test Coverage Results\" MODIFIED=\"1716316156982\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>de.fherfurt.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2ebbce7665d1c1d37e4d7a8cba127599c7e15748)
+++ b/.idea/workspace.xml	(date 1716320018384)
@@ -6,33 +6,14 @@
   <component name="ChangeListManager">
     <list default="true" id="1ae668b4-5b17-4607-9e5f-430942c42cbc" name="Changes" comment="Verbesserung">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/Contract.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/Customer.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/Maintenance.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/Payment.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/PaymentMethod.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/core/payment/PaymentStatus.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/logic/CustomerAddress.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/logic/RentVehicle.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/logic/SaleVehicle.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/logic/customerHistory/CustomerHistory.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/logic/customerHistory/CustomerHistoryReview.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/main/de/fherfurt/model/Vehicle.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/core/ContractTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/core/CustomerTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/core/MaintenanceTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/core/PaymentTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/logic/CustomerAddressTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/logic/CustomerHistoryTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/logic/RentVehicleTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/logic/SaleVehicleTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/test/de/fherfurt/model/VehicleTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/de/fherfurt/logic/CustomerAddress.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/fherfurt/logic/CustomerAddress.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerAddressTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerAddressTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerHistoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/de/fherfurt/logic/CustomerHistoryTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/de/fherfurt/logic/CustomerAddress.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/de/fherfurt/logic/CustomerAddress.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerAddressTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerAddressTest.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerHistoryTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/de/fherfurt/logic/CustomerHistoryTest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/de/fherfurt/core/Maintenance.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/fherfurt/core/Maintenance.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/de/fherfurt/core/payment/Payment.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/fherfurt/core/payment/Payment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/de/fherfurt/core/MaintenanceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/de/fherfurt/core/MaintenanceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/de/fherfurt/core/PaymentTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/de/fherfurt/core/PaymentTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/de/fherfurt/core/Maintenance.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/de/fherfurt/core/Maintenance.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/de/fherfurt/core/payment/Payment.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/de/fherfurt/core/payment/Payment.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/de/fherfurt/core/MaintenanceTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/de/fherfurt/core/MaintenanceTest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/de/fherfurt/core/PaymentTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/de/fherfurt/core/PaymentTest.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -53,51 +34,51 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "Downloaded.Files.Path.Enabled": "false",
-    "JUnit.All in CarHub360 (1).executor": "Coverage",
-    "JUnit.All in CarHub360 (2).executor": "Coverage",
-    "JUnit.All in CarHub360.executor": "Profiler#1",
-    "JUnit.All in mmra (1).executor": "Coverage",
-    "JUnit.All in mmra (2).executor": "Coverage",
-    "JUnit.All in mmra (3).executor": "Coverage",
-    "JUnit.All in mmra (4).executor": "Coverage",
-    "JUnit.All in mmra (5).executor": "Coverage",
-    "JUnit.All in mmra 3.executor": "Coverage",
-    "JUnit.All in mmra.executor": "Coverage",
-    "JUnit.All in test (1).executor": "Coverage",
-    "JUnit.All in test.executor": "Coverage",
-    "JUnit.CustomerAddressTest.executor": "Run",
-    "JUnit.de.fherfurt in test.executor": "Coverage",
-    "JUnit.de.fherfurt.core in test.executor": "Coverage",
-    "Repository.Attach.Annotations": "false",
-    "Repository.Attach.JavaDocs": "false",
-    "Repository.Attach.Sources": "false",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "main",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "/Users/rudolfminz/Downloads/mmra 3",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+    &quot;JUnit.All in CarHub360 (1).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in CarHub360 (2).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in CarHub360.executor&quot;: &quot;Profiler#1&quot;,
+    &quot;JUnit.All in mmra (1).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra (2).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra (3).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra (4).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra (5).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra 3.executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in mmra.executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in test (1).executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.All in test.executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.CustomerAddressTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.de.fherfurt in test.executor&quot;: &quot;Coverage&quot;,
+    &quot;JUnit.de.fherfurt.core in test.executor&quot;: &quot;Coverage&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/rudolfminz/Downloads/mmra 3&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.All in mmra (4)">
+  <component name="RunManager" selected="JUnit.All in mmra (2)">
     <configuration name="All in mmra (1)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="mmra" />
       <option name="PACKAGE_NAME" value="" />
@@ -114,7 +95,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="All in mmra (3)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in mmra (4)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="mmra" />
       <option name="PACKAGE_NAME" value="" />
       <option name="TEST_OBJECT" value="package" />
@@ -122,7 +103,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="All in mmra (4)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in mmra (5)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="mmra" />
       <option name="PACKAGE_NAME" value="" />
       <option name="TEST_OBJECT" value="package" />
@@ -130,7 +111,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="All in mmra (5)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in mmra" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="mmra" />
       <option name="PACKAGE_NAME" value="" />
       <option name="TEST_OBJECT" value="package" />
@@ -140,11 +121,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.All in mmra (4)" />
-        <item itemvalue="JUnit.All in mmra (3)" />
         <item itemvalue="JUnit.All in mmra (2)" />
         <item itemvalue="JUnit.All in mmra (1)" />
         <item itemvalue="JUnit.All in mmra (5)" />
+        <item itemvalue="JUnit.All in mmra" />
+        <item itemvalue="JUnit.All in mmra (4)" />
       </list>
     </recent_temporary>
   </component>
@@ -217,44 +198,44 @@
     <option name="LAST_COMMIT_MESSAGE" value="Verbesserung" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__4_.ic" NAME="All in mmra (4) Coverage Results" MODIFIED="1716317299558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$VehicleTest.ic" NAME="VehicleTest Coverage Results" MODIFIED="1716315505760" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
-      <FILTER>de.fherfurt.model.*</FILTER>
-    </SUITE>
-    <SUITE FILE_PATH="coverage/mmra$All_in_CarHub360__2_.ic" NAME="All in CarHub360 (2) Coverage Results" MODIFIED="1716316128861" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra$SaleVehicleTest.ic" NAME="SaleVehicleTest Coverage Results" MODIFIED="1716315538046" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>de.fherfurt.logic.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra.ic" NAME="All in mmra Coverage Results" MODIFIED="1716231945915" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__5_.ic" NAME="All in mmra (5) Coverage Results" MODIFIED="1716319320631" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__4_.ic" NAME="All in mmra (4) Coverage Results" MODIFIED="1716317299558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__4_.ic" NAME="All in mmra (4) Coverage Results" MODIFIED="1716317355888" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra_3$de_fherfurt_in_test.ic" NAME="de.fherfurt in test Coverage Results" MODIFIED="1716315079481" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>de.fherfurt.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__4_.ic" NAME="All in mmra (4) Coverage Results" MODIFIED="1716231229980" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_CarHub360__2_.ic" NAME="All in CarHub360 (2) Coverage Results" MODIFIED="1716316128861" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra$All_in_CarHub360__1_.ic" NAME="All in CarHub360 (1) Coverage Results" MODIFIED="1716316114782" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__3_.ic" NAME="All in mmra (3) Coverage Results" MODIFIED="1716316710470" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_test__1_.ic" NAME="All in test (1) Coverage Results" MODIFIED="1716316416319" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra$All_in_mmra__5_.ic" NAME="All in mmra (5) Coverage Results" MODIFIED="1716317539274" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__3_.ic" NAME="All in mmra (3) Coverage Results" MODIFIED="1716231195461" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__1_.ic" NAME="All in mmra (1) Coverage Results" MODIFIED="1716319559199" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_test.ic" NAME="All in test Coverage Results" MODIFIED="1716316141114" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra_3$All_in_test.ic" NAME="All in test Coverage Results" MODIFIED="1716230137118" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$CustomerAddressTest.ic" NAME="CustomerAddressTest Coverage Results" MODIFIED="1716315816812" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+    <SUITE FILE_PATH="coverage/mmra$de_fherfurt_in_test.ic" NAME="de.fherfurt in test Coverage Results" MODIFIED="1716316156982" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>de.fherfurt.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__1_.ic" NAME="All in mmra (1) Coverage Results" MODIFIED="1716317717046" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$RentVehicleTest.ic" NAME="RentVehicleTest Coverage Results" MODIFIED="1716315521461" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>de.fherfurt.logic.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/mmra$RentVehicleTest.ic" NAME="RentVehicleTest Coverage Results" MODIFIED="1716315521461" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+    <SUITE FILE_PATH="coverage/mmra$CustomerAddressTest.ic" NAME="CustomerAddressTest Coverage Results" MODIFIED="1716315816812" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>de.fherfurt.logic.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/mmra$All_in_test.ic" NAME="All in test Coverage Results" MODIFIED="1716316141114" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__2_.ic" NAME="All in mmra (2) Coverage Results" MODIFIED="1716315088200" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__2_.ic" NAME="All in mmra (2) Coverage Results" MODIFIED="1716319682378" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra_3.ic" NAME="All in mmra 3 Coverage Results" MODIFIED="1716230270540" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__1_.ic" NAME="All in mmra (1) Coverage Results" MODIFIED="1716317717046" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$All_in_mmra.ic" NAME="All in mmra Coverage Results" MODIFIED="1716317352450" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra.ic" NAME="All in mmra Coverage Results" MODIFIED="1716318255669" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__2_.ic" NAME="All in mmra (2) Coverage Results" MODIFIED="1716316625127" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$VehicleTest.ic" NAME="VehicleTest Coverage Results" MODIFIED="1716315505760" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>de.fherfurt.model.*</FILTER>
+    </SUITE>
     <SUITE FILE_PATH="coverage/mmra_3$de_fherfurt_core_in_test.ic" NAME="de.fherfurt.core in test Coverage Results" MODIFIED="1716314974126" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>de.fherfurt.core.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__1_.ic" NAME="All in mmra (1) Coverage Results" MODIFIED="1716230843918" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__5_.ic" NAME="All in mmra (5) Coverage Results" MODIFIED="1716231814443" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__2_.ic" NAME="All in mmra (2) Coverage Results" MODIFIED="1716316625127" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$All_in_test__1_.ic" NAME="All in test (1) Coverage Results" MODIFIED="1716316416319" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/mmra$de_fherfurt_in_test.ic" NAME="de.fherfurt in test Coverage Results" MODIFIED="1716316156982" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
-      <FILTER>de.fherfurt.*</FILTER>
-    </SUITE>
+    <SUITE FILE_PATH="coverage/mmra_3$All_in_mmra__3_.ic" NAME="All in mmra (3) Coverage Results" MODIFIED="1716317301674" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_mmra.ic" NAME="All in mmra Coverage Results" MODIFIED="1716317352450" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/mmra$All_in_mmra__3_.ic" NAME="All in mmra (3) Coverage Results" MODIFIED="1716316710470" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
   </component>
 </project>
\ No newline at end of file
